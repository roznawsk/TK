# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBleftMULDIVrightUMINUSrightTRANSPOSEADD ADDASSIGN ASSIGN BREAK COMMA COMMENT CONTINUE DIV DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUALITY EYE FLOATNUM FOR GREATER GREATER_EQUAL ID IF INEQUALITY INTNUM LESS LESS_EQUAL LPAREN LPARENCURLY LPARENSQUARE MATRIX MUL MULASSIGN ONES PRINT RANGE REF RETURN RPAREN RPARENCURLY RPARENSQUARE SEMICOLON STRING SUB SUBASSIGN TRANSPOSE WHILE ZEROSmain_statements : LPARENCURLY statements RPARENCURLY main_statements\n                      | main_statements LPARENCURLY statements RPARENCURLY\n                      | main_statements main_statements\n                      | statementsmain_statements : loop_statement\n                       | if_statementloop_statement : WHILE LPAREN condition RPAREN loop_instruction_statementloop_statement : FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statementif_statement : IF LPAREN condition RPAREN instruction_statement\n                    | IF LPAREN condition RPAREN instruction_statement else_statementelse_statement : ELSE instruction_statement\n                      | ELSE if_statementloop_instruction_statement : LPARENCURLY main_statements_break_continue RPARENCURLY\n                                  | statement SEMICOLON\n                                  | loop_statementloop_instruction_statement : BREAK SEMICOLON\n                                  | CONTINUE SEMICOLONmain_statements_break_continue : main_statements\n                                      | if_break_continue\n                                      | main_statements_break_continue main_statements_break_continue\n                                      | main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue\n                                      | main_statements_break_continue BREAK SEMICOLON main_statements_break_continue\n                                      | emptyelse_break_continue : ELSE instruction_statement_break_continue\n                           | ELSE if_break_continueif_break_continue : IF LPAREN condition RPAREN instruction_statement_break_continue\n                         | IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continueinstruction_statement_break_continue : LPARENCURLY main_statements_break_continue RPARENCURLY\n                                            | LPARENCURLY empty RPARENCURLY\n                                            | statement SEMICOLONinstruction_statement_break_continue : BREAK SEMICOLON\n                                            | CONTINUE SEMICOLONinstruction_statement : LPARENCURLY main_statements RPARENCURLY\n                             | LPARENCURLY empty RPARENCURLY\n                             | statement SEMICOLONcondition : num_expression EQUALITY num_expression\n                 | num_expression INEQUALITY num_expression\n                 | num_expression GREATER num_expression\n                 | num_expression GREATER_EQUAL num_expression\n                 | num_expression LESS num_expression\n                 | num_expression LESS_EQUAL num_expressioncondition : LPAREN condition RPARENstatements : statement SEMICOLON statements\n                  | statement SEMICOLONstatement : PRINT print_expressionprint_expression : expression\n                        | expression COMMA print_expressionexpression : num_expression\n                  | matrix_expressionexpression : STRINGstatement : ID ASSIGN STRINGstatement : ID REF ASSIGN num_expression\n                 | ID REF ADDASSIGN num_expression\n                 | ID REF SUBASSIGN num_expression\n                 | ID REF MULASSIGN num_expression\n                 | ID REF DIVASSIGN num_expressionstatement : ID ASSIGN num_expression\n                 | ID ADDASSIGN num_expression\n                 | ID SUBASSIGN num_expression\n                 | ID MULASSIGN num_expression\n                 | ID DIVASSIGN num_expressionnum_expression : IDmatrix_expression : IDnum_expression : LPAREN num_expression RPARENmatrix_expression : LPAREN matrix_expression RPARENnum_expression : num_expression ADD num_expression\n                  | num_expression SUB num_expression\n                  | num_expression MUL num_expression\n                  | num_expression DIV num_expressionmatrix_expression : matrix_expression ADD matrix_expression\n                         | matrix_expression SUB matrix_expression\n                         | matrix_expression MUL matrix_expression\n                         | matrix_expression DIV matrix_expression\n                         | matrix_expression DOTADD matrix_expression\n                         | matrix_expression DOTSUB matrix_expression\n                         | matrix_expression DOTMUL matrix_expression\n                         | matrix_expression DOTDIV matrix_expressionstatement : ID ASSIGN matrix_expression\n                 | ID ADDASSIGN matrix_expression\n                 | ID SUBASSIGN matrix_expression\n                 | ID MULASSIGN matrix_expression\n                 | ID DIVASSIGN matrix_expressionnum_expression : SUB num_expression %prec UMINUSmatrix_expression : SUB matrix_expression %prec UMINUSmatrix_expression : matrix_expression TRANSPOSEnum_expression : INTNUMnum_expression : FLOATNUMmatrix_expression : ZEROS LPAREN INTNUM RPAREN\n                         | ONES LPAREN INTNUM RPAREN\n                         | EYE LPAREN INTNUM RPARENmatrix_expression : MATRIXstatement : return_statementreturn_statement : RETURN expressionempty :'
    
_lr_action_items = {'LPARENCURLY':([0,1,3,4,5,14,17,35,36,43,44,48,84,89,90,93,107,109,110,111,112,124,130,131,133,143,144,149,150,151,152,154,155,156,157,158,159,160,162,163,164,168,169,170,171,172,173,174,176,177,178,179,180,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,202,204,],[2,15,-4,-5,-6,15,-44,-86,-87,2,-43,-62,-83,2,15,131,144,-66,-67,-68,-69,-64,-7,2,-15,-9,2,2,15,-19,-23,-14,-16,-17,131,-10,144,15,-35,2,-13,-8,-11,-12,-33,-34,2,2,2,2,180,-26,2,-27,194,2,-23,15,-30,-31,-32,-24,-25,2,-28,-29,-23,-30,-29,194,]),'WHILE':([0,1,3,4,5,14,17,35,36,43,44,48,84,89,90,93,109,110,111,112,124,130,131,133,143,144,149,150,151,152,154,155,156,157,158,160,162,163,164,168,169,170,171,172,173,174,176,177,179,180,184,186,187,188,189,190,191,192,193,194,197,198,199,200,202,],[7,7,-4,-5,-6,7,-44,-86,-87,7,-43,-62,-83,7,7,7,-66,-67,-68,-69,-64,-7,7,-15,-9,7,7,7,-19,-23,-14,-16,-17,7,-10,7,-35,7,-13,-8,-11,-12,-33,-34,7,7,7,7,-26,7,-27,7,-23,7,-30,-31,-32,-24,-25,7,-28,-29,-23,-30,-29,]),'FOR':([0,1,3,4,5,14,17,35,36,43,44,48,84,89,90,93,109,110,111,112,124,130,131,133,143,144,149,150,151,152,154,155,156,157,158,160,162,163,164,168,169,170,171,172,173,174,176,177,179,180,184,186,187,188,189,190,191,192,193,194,197,198,199,200,202,],[8,8,-4,-5,-6,8,-44,-86,-87,8,-43,-62,-83,8,8,8,-66,-67,-68,-69,-64,-7,8,-15,-9,8,8,8,-19,-23,-14,-16,-17,8,-10,8,-35,8,-13,-8,-11,-12,-33,-34,8,8,8,8,-26,8,-27,8,-23,8,-30,-31,-32,-24,-25,8,-28,-29,-23,-30,-29,]),'IF':([0,1,3,4,5,14,17,43,44,89,90,130,131,133,143,144,149,150,151,152,154,155,156,158,159,160,162,163,164,168,169,170,171,172,173,174,176,177,179,180,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,202,],[10,10,-4,-5,-6,10,-44,10,-43,10,10,-7,153,-15,-9,10,153,10,-19,-23,-14,-16,-17,-10,10,10,-35,153,-13,-8,-11,-12,-33,-34,153,153,153,153,-26,153,-27,196,153,-23,10,-30,-31,-32,-24,-25,153,-28,-29,-23,-30,-29,]),'PRINT':([0,1,2,3,4,5,14,15,17,35,36,43,44,48,84,89,90,93,107,109,110,111,112,124,130,131,133,143,144,149,150,151,152,154,155,156,157,158,159,160,162,163,164,168,169,170,171,172,173,174,176,177,178,179,180,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,202,204,],[11,11,11,-4,-5,-6,11,11,11,-86,-87,11,-43,-62,-83,11,11,11,11,-66,-67,-68,-69,-64,-7,11,-15,-9,11,11,11,-19,-23,-14,-16,-17,11,-10,11,11,-35,11,-13,-8,-11,-12,-33,-34,11,11,11,11,11,-26,11,-27,11,11,-23,11,-30,-31,-32,-24,-25,11,-28,-29,-23,-30,-29,11,]),'ID':([0,1,2,3,4,5,8,11,13,14,15,17,18,20,22,23,24,25,26,33,34,35,36,43,44,45,48,49,50,54,55,56,57,58,68,69,70,71,72,73,74,75,76,77,78,79,80,84,89,90,93,94,95,96,97,98,99,100,107,109,110,111,112,115,116,124,130,131,133,142,143,144,149,150,151,152,154,155,156,157,158,159,160,162,163,164,167,168,169,170,171,172,173,174,176,177,178,179,180,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,201,202,204,],[9,9,9,-4,-5,-6,19,32,32,9,9,9,48,32,32,32,32,32,48,32,32,-86,-87,9,-43,48,-62,48,48,48,48,48,48,48,32,48,48,48,48,114,114,114,114,114,114,114,114,-83,9,9,9,48,48,48,48,48,48,48,9,-66,-67,-68,-69,114,114,-64,-7,9,-15,48,-9,9,9,9,-19,-23,-14,-16,-17,9,-10,9,9,-35,9,-13,48,-8,-11,-12,-33,-34,9,9,9,9,9,-26,9,-27,9,9,-23,9,-30,-31,-32,-24,-25,9,-28,-29,-23,-30,48,-29,9,]),'RETURN':([0,1,2,3,4,5,14,15,17,35,36,43,44,48,84,89,90,93,107,109,110,111,112,124,130,131,133,143,144,149,150,151,152,154,155,156,157,158,159,160,162,163,164,168,169,170,171,172,173,174,176,177,178,179,180,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,202,204,],[13,13,13,-4,-5,-6,13,13,13,-86,-87,13,-43,-62,-83,13,13,13,13,-66,-67,-68,-69,-64,-7,13,-15,-9,13,13,13,-19,-23,-14,-16,-17,13,-10,13,13,-35,13,-13,-8,-11,-12,-33,-34,13,13,13,13,13,-26,13,-27,13,13,-23,13,-30,-31,-32,-24,-25,13,-28,-29,-23,-30,-29,13,]),'$end':([1,3,4,5,14,17,44,89,90,130,133,143,154,155,156,158,162,164,168,169,170,171,172,],[0,-4,-5,-6,-3,-44,-43,-2,-1,-7,-15,-9,-14,-16,-17,-10,-35,-13,-8,-11,-12,-33,-34,]),'RPARENCURLY':([3,4,5,14,16,17,42,44,89,90,130,131,133,143,144,149,150,151,152,154,155,156,158,160,161,162,163,164,168,169,170,171,172,173,174,176,177,179,180,184,186,187,188,189,190,191,192,193,194,197,198,199,200,202,],[-4,-5,-6,-3,43,-44,89,-43,-2,-1,-7,-94,-15,-9,-94,164,-18,-19,-23,-14,-16,-17,-10,171,172,-35,-20,-13,-8,-11,-12,-33,-34,-94,-94,-21,-22,-26,-94,-27,197,198,171,-30,-31,-32,-24,-25,-94,-28,-29,202,-30,-29,]),'CONTINUE':([3,4,5,14,17,35,36,44,48,84,89,90,93,109,110,111,112,124,130,131,133,143,149,150,151,152,154,155,156,157,158,162,163,164,168,169,170,171,172,173,174,176,177,178,179,180,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,202,204,],[-4,-5,-6,-3,-44,-86,-87,-43,-62,-83,-2,-1,135,-66,-67,-68,-69,-64,-7,-94,-15,-9,165,-18,-19,-23,-14,-16,-17,135,-10,-35,165,-13,-8,-11,-12,-33,-34,-94,-94,165,165,183,-26,-94,-27,183,165,-23,-18,-30,-31,-32,-24,-25,-94,-28,-29,-23,-30,-29,183,]),'BREAK':([3,4,5,14,17,35,36,44,48,84,89,90,93,109,110,111,112,124,130,131,133,143,149,150,151,152,154,155,156,157,158,162,163,164,168,169,170,171,172,173,174,176,177,178,179,180,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,202,204,],[-4,-5,-6,-3,-44,-86,-87,-43,-62,-83,-2,-1,134,-66,-67,-68,-69,-64,-7,-94,-15,-9,166,-18,-19,-23,-14,-16,-17,134,-10,-35,166,-13,-8,-11,-12,-33,-34,-94,-94,166,166,182,-26,-94,-27,182,166,-23,-18,-30,-31,-32,-24,-25,-94,-28,-29,-23,-30,-29,182,]),'SEMICOLON':([6,12,27,28,29,30,31,32,35,36,40,41,48,51,52,53,59,60,61,62,63,64,65,66,81,84,85,102,103,104,105,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,132,134,135,145,146,147,148,165,166,181,182,183,195,],[17,-92,-45,-46,-48,-49,-50,-62,-86,-87,-91,-93,-62,-51,-57,-78,-58,-79,-59,-80,-60,-81,-61,-82,-85,-83,-84,-52,-53,-54,-55,-56,-47,-66,-67,-68,-69,-70,-63,-71,-72,-73,-74,-75,-76,-77,-64,-65,154,155,156,162,-88,-89,-90,173,174,189,190,191,200,]),'LPAREN':([7,10,11,13,18,20,22,23,24,25,26,33,34,37,38,39,45,49,50,54,55,56,57,58,68,69,70,71,72,73,74,75,76,77,78,79,80,94,95,96,97,98,99,100,115,116,142,153,167,196,201,],[18,26,33,33,45,33,33,33,33,33,45,33,33,86,87,88,45,100,100,100,100,100,100,100,33,100,100,100,100,115,115,115,115,115,115,115,115,100,100,100,100,100,100,100,115,115,100,167,45,201,45,]),'ASSIGN':([9,19,21,],[20,50,54,]),'REF':([9,],[21,]),'ADDASSIGN':([9,21,],[22,55,]),'SUBASSIGN':([9,21,],[23,56,]),'MULASSIGN':([9,21,],[24,57,]),'DIVASSIGN':([9,21,],[25,58,]),'STRING':([11,13,20,68,],[31,31,51,31,]),'SUB':([11,13,18,20,22,23,24,25,26,29,30,32,33,34,35,36,40,45,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,136,137,138,139,140,141,142,146,147,148,157,167,201,],[34,34,49,34,34,34,34,34,49,70,74,-62,34,34,-86,-87,-91,49,70,-62,49,49,70,74,49,49,49,49,49,70,74,70,74,70,74,70,74,34,49,49,49,49,116,116,116,116,116,116,116,116,-85,70,74,-83,-84,70,49,49,49,49,49,49,49,70,70,70,70,70,70,-66,-67,-68,-69,-70,-63,116,116,-71,-72,-73,74,74,74,74,-64,-65,70,70,70,70,70,70,49,-88,-89,-90,70,49,49,]),'INTNUM':([11,13,18,20,22,23,24,25,26,33,34,45,49,50,54,55,56,57,58,68,69,70,71,72,86,87,88,94,95,96,97,98,99,100,142,167,201,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,126,127,128,35,35,35,35,35,35,35,35,35,35,]),'FLOATNUM':([11,13,18,20,22,23,24,25,26,33,34,45,49,50,54,55,56,57,58,68,69,70,71,72,94,95,96,97,98,99,100,142,167,201,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'ZEROS':([11,13,20,22,23,24,25,33,34,68,73,74,75,76,77,78,79,80,115,116,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ONES':([11,13,20,22,23,24,25,33,34,68,73,74,75,76,77,78,79,80,115,116,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'EYE':([11,13,20,22,23,24,25,33,34,68,73,74,75,76,77,78,79,80,115,116,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'MATRIX':([11,13,20,22,23,24,25,33,34,68,73,74,75,76,77,78,79,80,115,116,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'COMMA':([28,29,30,31,32,35,36,40,48,81,84,85,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,146,147,148,],[68,-48,-49,-50,-62,-86,-87,-91,-62,-85,-83,-84,-66,-67,-68,-69,-70,-63,-71,-72,-73,-74,-75,-76,-77,-64,-65,-88,-89,-90,]),'ADD':([29,30,32,35,36,40,47,48,52,53,59,60,61,62,63,64,65,66,81,82,83,84,85,92,101,102,103,104,105,106,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,136,137,138,139,140,141,146,147,148,157,],[69,73,-62,-86,-87,-91,69,-62,69,73,69,73,69,73,69,73,69,73,-85,69,73,-83,-84,69,69,69,69,69,69,69,-66,-67,-68,-69,-70,-63,-71,-72,-73,73,73,73,73,-64,-65,69,69,69,69,69,69,-88,-89,-90,69,]),'MUL':([29,30,32,35,36,40,47,48,52,53,59,60,61,62,63,64,65,66,81,82,83,84,85,92,101,102,103,104,105,106,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,136,137,138,139,140,141,146,147,148,157,],[71,75,-62,-86,-87,-91,71,-62,71,75,71,75,71,75,71,75,71,75,-85,71,75,-83,-84,71,71,71,71,71,71,71,71,71,-68,-69,75,-63,75,-72,-73,75,75,75,75,-64,-65,71,71,71,71,71,71,-88,-89,-90,71,]),'DIV':([29,30,32,35,36,40,47,48,52,53,59,60,61,62,63,64,65,66,81,82,83,84,85,92,101,102,103,104,105,106,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,136,137,138,139,140,141,146,147,148,157,],[72,76,-62,-86,-87,-91,72,-62,72,76,72,76,72,76,72,76,72,76,-85,72,76,-83,-84,72,72,72,72,72,72,72,72,72,-68,-69,76,-63,76,-72,-73,76,76,76,76,-64,-65,72,72,72,72,72,72,-88,-89,-90,72,]),'DOTADD':([30,32,40,53,60,62,64,66,81,83,85,113,114,117,118,119,120,121,122,123,125,146,147,148,],[77,-63,-91,77,77,77,77,77,-85,77,-84,-70,-63,-71,-72,-73,77,77,77,77,-65,-88,-89,-90,]),'DOTSUB':([30,32,40,53,60,62,64,66,81,83,85,113,114,117,118,119,120,121,122,123,125,146,147,148,],[78,-63,-91,78,78,78,78,78,-85,78,-84,-70,-63,-71,-72,-73,78,78,78,78,-65,-88,-89,-90,]),'DOTMUL':([30,32,40,53,60,62,64,66,81,83,85,113,114,117,118,119,120,121,122,123,125,146,147,148,],[79,-63,-91,79,79,79,79,79,-85,79,-84,-70,-63,-71,-72,-73,79,79,79,79,-65,-88,-89,-90,]),'DOTDIV':([30,32,40,53,60,62,64,66,81,83,85,113,114,117,118,119,120,121,122,123,125,146,147,148,],[80,-63,-91,80,80,80,80,80,-85,80,-84,-70,-63,-71,-72,-73,80,80,80,80,-65,-88,-89,-90,]),'TRANSPOSE':([30,32,40,53,60,62,64,66,81,83,85,113,114,117,118,119,120,121,122,123,125,146,147,148,],[81,-63,-91,81,81,81,81,81,-85,81,81,81,-63,81,81,81,81,81,81,81,-65,-88,-89,-90,]),'RPAREN':([32,35,36,40,46,48,67,81,82,83,84,85,91,92,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,136,137,138,139,140,141,146,147,148,175,203,],[-62,-86,-87,-91,93,-62,107,-85,124,125,-83,-84,129,124,-66,-67,-68,-69,-70,-63,-71,-72,-73,-74,-75,-76,-77,-64,-65,146,147,148,-42,-36,-37,-38,-39,-40,-41,-88,-89,-90,178,204,]),'EQUALITY':([35,36,47,48,84,92,109,110,111,112,124,],[-86,-87,94,-62,-83,94,-66,-67,-68,-69,-64,]),'INEQUALITY':([35,36,47,48,84,92,109,110,111,112,124,],[-86,-87,95,-62,-83,95,-66,-67,-68,-69,-64,]),'GREATER':([35,36,47,48,84,92,109,110,111,112,124,],[-86,-87,96,-62,-83,96,-66,-67,-68,-69,-64,]),'GREATER_EQUAL':([35,36,47,48,84,92,109,110,111,112,124,],[-86,-87,97,-62,-83,97,-66,-67,-68,-69,-64,]),'LESS':([35,36,47,48,84,92,109,110,111,112,124,],[-86,-87,98,-62,-83,98,-66,-67,-68,-69,-64,]),'LESS_EQUAL':([35,36,47,48,84,92,109,110,111,112,124,],[-86,-87,99,-62,-83,99,-66,-67,-68,-69,-64,]),'RANGE':([35,36,48,84,101,109,110,111,112,124,],[-86,-87,-62,-83,142,-66,-67,-68,-69,-64,]),'ELSE':([143,162,171,172,179,189,190,191,197,198,200,202,],[159,-35,-33,-34,185,-30,-31,-32,-28,-29,-30,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main_statements':([0,1,14,43,89,90,131,144,149,150,160,163,173,174,176,177,180,186,188,194,],[1,14,14,90,90,14,150,160,150,14,14,150,150,150,150,150,188,150,14,150,]),'statements':([0,1,2,14,15,17,43,89,90,131,144,149,150,160,163,173,174,176,177,180,186,188,194,],[3,3,16,3,42,44,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'loop_statement':([0,1,14,43,89,90,93,131,144,149,150,157,160,163,173,174,176,177,180,186,188,194,],[4,4,4,4,4,4,133,4,4,4,4,133,4,4,4,4,4,4,4,4,4,4,]),'if_statement':([0,1,14,43,89,90,131,144,149,150,159,160,163,173,174,176,177,180,186,188,194,],[5,5,5,5,5,5,5,5,5,5,170,5,5,5,5,5,5,5,5,5,5,]),'statement':([0,1,2,14,15,17,43,89,90,93,107,131,144,149,150,157,159,160,163,173,174,176,177,178,180,185,186,188,194,204,],[6,6,6,6,6,6,6,6,6,132,145,6,6,6,6,132,145,6,6,6,6,6,6,181,6,195,6,6,6,195,]),'return_statement':([0,1,2,14,15,17,43,89,90,93,107,131,144,149,150,157,159,160,163,173,174,176,177,178,180,185,186,188,194,204,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'print_expression':([11,68,],[27,108,]),'expression':([11,13,68,],[28,41,28,]),'num_expression':([11,13,18,20,22,23,24,25,26,33,34,45,49,50,54,55,56,57,58,68,69,70,71,72,94,95,96,97,98,99,100,142,167,201,],[29,29,47,52,59,61,63,65,47,82,84,92,84,101,102,103,104,105,106,29,109,110,111,112,136,137,138,139,140,141,82,157,47,47,]),'matrix_expression':([11,13,20,22,23,24,25,33,34,68,73,74,75,76,77,78,79,80,115,116,],[30,30,53,60,62,64,66,83,85,30,113,117,118,119,120,121,122,123,83,85,]),'condition':([18,26,45,167,201,],[46,67,91,175,203,]),'loop_instruction_statement':([93,157,],[130,168,]),'instruction_statement':([107,159,178,],[143,169,143,]),'main_statements_break_continue':([131,149,163,173,174,176,177,180,186,194,],[149,163,163,176,177,163,163,186,163,186,]),'if_break_continue':([131,149,163,173,174,176,177,180,185,186,194,],[151,151,151,151,151,151,151,151,193,151,151,]),'empty':([131,144,149,163,173,174,176,177,180,186,194,],[152,161,152,152,152,152,152,152,187,152,199,]),'else_statement':([143,],[158,]),'instruction_statement_break_continue':([178,185,204,],[179,192,179,]),'else_break_continue':([179,],[184,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main_statements","S'",1,None,None,None),
  ('main_statements -> LPARENCURLY statements RPARENCURLY main_statements','main_statements',4,'p_main_statements','Mparser.py',24),
  ('main_statements -> main_statements LPARENCURLY statements RPARENCURLY','main_statements',4,'p_main_statements','Mparser.py',25),
  ('main_statements -> main_statements main_statements','main_statements',2,'p_main_statements','Mparser.py',26),
  ('main_statements -> statements','main_statements',1,'p_main_statements','Mparser.py',27),
  ('main_statements -> loop_statement','main_statements',1,'p_loop_statement','Mparser.py',49),
  ('main_statements -> if_statement','main_statements',1,'p_loop_statement','Mparser.py',50),
  ('loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement','loop_statement',5,'p_while','Mparser.py',55),
  ('loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement','loop_statement',7,'p_for','Mparser.py',60),
  ('if_statement -> IF LPAREN condition RPAREN instruction_statement','if_statement',5,'p_if_statement','Mparser.py',65),
  ('if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement','if_statement',6,'p_if_statement','Mparser.py',66),
  ('else_statement -> ELSE instruction_statement','else_statement',2,'p_else_statement','Mparser.py',74),
  ('else_statement -> ELSE if_statement','else_statement',2,'p_else_statement','Mparser.py',75),
  ('loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY','loop_instruction_statement',3,'p_loop_statements','Mparser.py',80),
  ('loop_instruction_statement -> statement SEMICOLON','loop_instruction_statement',2,'p_loop_statements','Mparser.py',81),
  ('loop_instruction_statement -> loop_statement','loop_instruction_statement',1,'p_loop_statements','Mparser.py',82),
  ('loop_instruction_statement -> BREAK SEMICOLON','loop_instruction_statement',2,'p_loop_only_break_continue','Mparser.py',92),
  ('loop_instruction_statement -> CONTINUE SEMICOLON','loop_instruction_statement',2,'p_loop_only_break_continue','Mparser.py',93),
  ('main_statements_break_continue -> main_statements','main_statements_break_continue',1,'p_main_statements_break_continue','Mparser.py',98),
  ('main_statements_break_continue -> if_break_continue','main_statements_break_continue',1,'p_main_statements_break_continue','Mparser.py',99),
  ('main_statements_break_continue -> main_statements_break_continue main_statements_break_continue','main_statements_break_continue',2,'p_main_statements_break_continue','Mparser.py',100),
  ('main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue','main_statements_break_continue',4,'p_main_statements_break_continue','Mparser.py',101),
  ('main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue','main_statements_break_continue',4,'p_main_statements_break_continue','Mparser.py',102),
  ('main_statements_break_continue -> empty','main_statements_break_continue',1,'p_main_statements_break_continue','Mparser.py',103),
  ('else_break_continue -> ELSE instruction_statement_break_continue','else_break_continue',2,'p_else_break_continue','Mparser.py',113),
  ('else_break_continue -> ELSE if_break_continue','else_break_continue',2,'p_else_break_continue','Mparser.py',114),
  ('if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue','if_break_continue',5,'p_if_break_continue','Mparser.py',119),
  ('if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue','if_break_continue',6,'p_if_break_continue','Mparser.py',120),
  ('instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY','instruction_statement_break_continue',3,'p_instruction_statement_break_continue1','Mparser.py',128),
  ('instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY','instruction_statement_break_continue',3,'p_instruction_statement_break_continue1','Mparser.py',129),
  ('instruction_statement_break_continue -> statement SEMICOLON','instruction_statement_break_continue',2,'p_instruction_statement_break_continue1','Mparser.py',130),
  ('instruction_statement_break_continue -> BREAK SEMICOLON','instruction_statement_break_continue',2,'p_instruction_statement_break_continue2','Mparser.py',138),
  ('instruction_statement_break_continue -> CONTINUE SEMICOLON','instruction_statement_break_continue',2,'p_instruction_statement_break_continue2','Mparser.py',139),
  ('instruction_statement -> LPARENCURLY main_statements RPARENCURLY','instruction_statement',3,'p_instruction_statement','Mparser.py',144),
  ('instruction_statement -> LPARENCURLY empty RPARENCURLY','instruction_statement',3,'p_instruction_statement','Mparser.py',145),
  ('instruction_statement -> statement SEMICOLON','instruction_statement',2,'p_instruction_statement','Mparser.py',146),
  ('condition -> num_expression EQUALITY num_expression','condition',3,'p_condition','Mparser.py',155),
  ('condition -> num_expression INEQUALITY num_expression','condition',3,'p_condition','Mparser.py',156),
  ('condition -> num_expression GREATER num_expression','condition',3,'p_condition','Mparser.py',157),
  ('condition -> num_expression GREATER_EQUAL num_expression','condition',3,'p_condition','Mparser.py',158),
  ('condition -> num_expression LESS num_expression','condition',3,'p_condition','Mparser.py',159),
  ('condition -> num_expression LESS_EQUAL num_expression','condition',3,'p_condition','Mparser.py',160),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condintion_group','Mparser.py',165),
  ('statements -> statement SEMICOLON statements','statements',3,'p_statements','Mparser.py',170),
  ('statements -> statement SEMICOLON','statements',2,'p_statements','Mparser.py',171),
  ('statement -> PRINT print_expression','statement',2,'p_print','Mparser.py',179),
  ('print_expression -> expression','print_expression',1,'p_print_expression','Mparser.py',186),
  ('print_expression -> expression COMMA print_expression','print_expression',3,'p_print_expression','Mparser.py',187),
  ('expression -> num_expression','expression',1,'p_expression','Mparser.py',197),
  ('expression -> matrix_expression','expression',1,'p_expression','Mparser.py',198),
  ('expression -> STRING','expression',1,'p_expression_string','Mparser.py',203),
  ('statement -> ID ASSIGN STRING','statement',3,'p_assign_string','Mparser.py',208),
  ('statement -> ID REF ASSIGN num_expression','statement',4,'p_assign_cell_matrix','Mparser.py',213),
  ('statement -> ID REF ADDASSIGN num_expression','statement',4,'p_assign_cell_matrix','Mparser.py',214),
  ('statement -> ID REF SUBASSIGN num_expression','statement',4,'p_assign_cell_matrix','Mparser.py',215),
  ('statement -> ID REF MULASSIGN num_expression','statement',4,'p_assign_cell_matrix','Mparser.py',216),
  ('statement -> ID REF DIVASSIGN num_expression','statement',4,'p_assign_cell_matrix','Mparser.py',217),
  ('statement -> ID ASSIGN num_expression','statement',3,'p_assign_num','Mparser.py',222),
  ('statement -> ID ADDASSIGN num_expression','statement',3,'p_assign_num','Mparser.py',223),
  ('statement -> ID SUBASSIGN num_expression','statement',3,'p_assign_num','Mparser.py',224),
  ('statement -> ID MULASSIGN num_expression','statement',3,'p_assign_num','Mparser.py',225),
  ('statement -> ID DIVASSIGN num_expression','statement',3,'p_assign_num','Mparser.py',226),
  ('num_expression -> ID','num_expression',1,'p_num_expression_name','Mparser.py',231),
  ('matrix_expression -> ID','matrix_expression',1,'p_matrix_expression_name','Mparser.py',236),
  ('num_expression -> LPAREN num_expression RPAREN','num_expression',3,'p_num_expression_group','Mparser.py',241),
  ('matrix_expression -> LPAREN matrix_expression RPAREN','matrix_expression',3,'p_matrix_expression_group','Mparser.py',246),
  ('num_expression -> num_expression ADD num_expression','num_expression',3,'p_num_expression_binop','Mparser.py',251),
  ('num_expression -> num_expression SUB num_expression','num_expression',3,'p_num_expression_binop','Mparser.py',252),
  ('num_expression -> num_expression MUL num_expression','num_expression',3,'p_num_expression_binop','Mparser.py',253),
  ('num_expression -> num_expression DIV num_expression','num_expression',3,'p_num_expression_binop','Mparser.py',254),
  ('matrix_expression -> matrix_expression ADD matrix_expression','matrix_expression',3,'p_matrix_expression_binop','Mparser.py',259),
  ('matrix_expression -> matrix_expression SUB matrix_expression','matrix_expression',3,'p_matrix_expression_binop','Mparser.py',260),
  ('matrix_expression -> matrix_expression MUL matrix_expression','matrix_expression',3,'p_matrix_expression_binop','Mparser.py',261),
  ('matrix_expression -> matrix_expression DIV matrix_expression','matrix_expression',3,'p_matrix_expression_binop','Mparser.py',262),
  ('matrix_expression -> matrix_expression DOTADD matrix_expression','matrix_expression',3,'p_matrix_expression_binop','Mparser.py',263),
  ('matrix_expression -> matrix_expression DOTSUB matrix_expression','matrix_expression',3,'p_matrix_expression_binop','Mparser.py',264),
  ('matrix_expression -> matrix_expression DOTMUL matrix_expression','matrix_expression',3,'p_matrix_expression_binop','Mparser.py',265),
  ('matrix_expression -> matrix_expression DOTDIV matrix_expression','matrix_expression',3,'p_matrix_expression_binop','Mparser.py',266),
  ('statement -> ID ASSIGN matrix_expression','statement',3,'p_matrix_assign','Mparser.py',271),
  ('statement -> ID ADDASSIGN matrix_expression','statement',3,'p_matrix_assign','Mparser.py',272),
  ('statement -> ID SUBASSIGN matrix_expression','statement',3,'p_matrix_assign','Mparser.py',273),
  ('statement -> ID MULASSIGN matrix_expression','statement',3,'p_matrix_assign','Mparser.py',274),
  ('statement -> ID DIVASSIGN matrix_expression','statement',3,'p_matrix_assign','Mparser.py',275),
  ('num_expression -> SUB num_expression','num_expression',2,'p_num_expression_uminus','Mparser.py',280),
  ('matrix_expression -> SUB matrix_expression','matrix_expression',2,'p_matrix_expression_uminus','Mparser.py',285),
  ('matrix_expression -> matrix_expression TRANSPOSE','matrix_expression',2,'p_matrix_transpose','Mparser.py',290),
  ('num_expression -> INTNUM','num_expression',1,'p_num_expression_int','Mparser.py',295),
  ('num_expression -> FLOATNUM','num_expression',1,'p_num_expression_float','Mparser.py',300),
  ('matrix_expression -> ZEROS LPAREN INTNUM RPAREN','matrix_expression',4,'p_matrix_keyword_declaration_expression','Mparser.py',305),
  ('matrix_expression -> ONES LPAREN INTNUM RPAREN','matrix_expression',4,'p_matrix_keyword_declaration_expression','Mparser.py',306),
  ('matrix_expression -> EYE LPAREN INTNUM RPAREN','matrix_expression',4,'p_matrix_keyword_declaration_expression','Mparser.py',307),
  ('matrix_expression -> MATRIX','matrix_expression',1,'p_matrix_explicit','Mparser.py',312),
  ('statement -> return_statement','statement',1,'p_return','Mparser.py',317),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','Mparser.py',322),
  ('empty -> <empty>','empty',0,'p_empty','Mparser.py',327),
]
